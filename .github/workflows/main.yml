name: Build Desktop Apps (Win + macOS)

on:
  workflow_dispatch:        # manuell startbar
  push:
    branches: [ main ]      # baue bei jedem Push auf main (anpassen, falls master)
    tags:
      - 'v*'                # zusätzlich bei Version-Tags (für Release-Job)

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install "pyinstaller>=6.8"

      - name: Quick import check
        run: python -c "import sys; sys.path.append('src'); import app; print('OK')"

      - name: Build EXE with PyInstaller
        shell: cmd
        run: |
          pyinstaller src/app.py ^
            --name "Amazon Image Scraper" ^
            --onefile ^
            --noconsole ^
            --clean ^
            --hidden-import numpy ^
            --hidden-import pandas ^
            --hidden-import bs4 ^
            --hidden-import PIL ^
            --hidden-import XlsxWriter ^
            --collect-submodules numpy ^
            --collect-submodules pandas ^
            --collect-data numpy ^
            --collect-data pandas ^
            --log-level=WARN

      - name: Zip artifact (Win)
        run: |
          $ErrorActionPreference = 'SilentlyContinue'
          if (Test-Path "dist/Amazon Image Scraper.exe") {
            Compress-Archive -Path "dist/Amazon Image Scraper.exe" -DestinationPath "Amazon-Image-Scraper_win.zip" -Force
          } elseif (Test-Path "dist/Amazon Image Scraper/Amazon Image Scraper.exe") {
            Compress-Archive -Path "dist/Amazon Image Scraper/Amazon Image Scraper.exe" -DestinationPath "Amazon-Image-Scraper_win.zip" -Force
          } else {
            Write-Error "EXE nicht gefunden"
          }

      - name: Upload artifact (Win)
        uses: actions/upload-artifact@v4
        with:
          name: Amazon-Image-Scraper_win.zip
          path: Amazon-Image-Scraper_win.zip

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # wichtig: requirements muss (u. a.) numpy==1.26.4 enthalten
          pip install -r requirements.txt
          pip install "pyinstaller>=6.8"

      - name: Quick import check
        run: python -c "import sys; sys.path.append('src'); import app; print('OK')"

      - name: Build .app with PyInstaller (collect numpy/pandas)
        run: |
          pyinstaller src/app.py \
            --name "Amazon Image Scraper" \
            --windowed \
            --onedir \
            --clean \
            --hidden-import numpy \
            --hidden-import pandas \
            --hidden-import bs4 \
            --hidden-import PIL \
            --hidden-import XlsxWriter \
            --collect-submodules numpy \
            --collect-submodules pandas \
            --collect-data numpy \
            --collect-data pandas \
            --log-level=WARN

      - name: Zip .app bundle
        run: |
          APP_PATH=""
          if [ -d "dist/Amazon Image Scraper.app" ]; then
            APP_PATH="dist/Amazon Image Scraper.app"
          elif [ -d "dist/Amazon Image Scraper/Amazon Image Scraper.app" ]; then
            APP_PATH="dist/Amazon Image Scraper/Amazon Image Scraper.app"
          fi
          if [ -z "$APP_PATH" ]; then
            echo "Konnte .app nicht finden"; exit 1
          fi
          # Quarantäne entfernen (erleichtert Start auf Zielsystemen)
          xattr -dr com.apple.quarantine "$APP_PATH" || true
          ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" "Amazon-Image-Scraper_mac.zip"

      - name: Upload artifact (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: Amazon-Image-Scraper_mac.zip
          path: Amazon-Image-Scraper_mac.zip

  release:
    name: Create Release (on tag)
    needs: [build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          generate_release_notes: true
